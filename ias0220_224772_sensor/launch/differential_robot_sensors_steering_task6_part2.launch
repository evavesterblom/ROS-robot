  <!-- Launching a simulation with on-line input data,
  which will move my robot in Gazebo using my steering node
  In gazebo, we spawn the robot using controller spawner
  -->

  <launch>
    <include file="$(find ias0220_224772_sensor)/launch/gazebo.launch">
            <arg name="model" value="'$(find ias0220_224772_sensor)/urdf/differential_robot_task6.urdf'" />  
    </include>

    <rosparam command="load"
                file="$(find ias0220_224772_sensor)/config/joints.yaml"
                ns="joint_state_controller" />
    <rosparam command="load"
                file="$(find ias0220_224772_sensor)/config/diffdrive.yaml"
                ns="diff_drive_controller" />
    <rosparam command="load" 
                file="$(find ias0220_224772_sensor)/config/gazebo_ros_control_params.yaml" />

    <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="joint_state_controller
            diff_drive_controller"/>

    <node pkg="ias0220_224772_sensor" name="steering_node" type="steering_node.py" output="screen"/>

    <!-- launch the serial interface node that will publish the incoming imu data as ROS messages -->
    <node pkg="ias0220_224772_sensor" name="serial_interface" type="serial_interface.py" args="/dev/ttyUSB0" />

    <node pkg="tf" type="static_transform_publisher" name="imu_link" args="0 0 0 0 0 0 0  /map /imu_link" />

    <!-- record messages only selected topics bag file -->
    <arg name = "bag_directory" default="$(find ias0220_224772_sensor)/bags/" />
    <arg name = "filename" default="recorded_steering_c.bag" />
    <node pkg="rosbag" type="record" name="recorder" args="-O $(arg bag_directory)$(arg filename) /tf /tf_static /imu /distance"/>


</launch>
